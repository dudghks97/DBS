<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>기본 데이터 형식 샘플</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script.js">
      
    </script><script src="../local/script_main.js">&amp;nbsp;</script>
  </head>
  <body>
    <!--Topic built:04/01/2010 05:03:28-->

    
    
    
    
    
    
    
    
    
    <div id="header">
      <table width="100%" id="topTable"><tr>
          <td align="left">
            <span id="headerBold">기본 데이터 형식 샘플</span>
          </td>
          <td align="right">
            
          </td>
        </tr></table>
      
      
      
    </div>
    <div id="mainSection">
      
        
        
    <font color="DarkGray">
      
    </font>
    <p />
    
    <p />
  
        <div id="introductionSection" class="section">
    <p>이 Microsoft SQL Server JDBC 드라이버 샘플 응용 프로그램에서는 ResultSet getter 메서드를 사용하여 기본 SQL Server 데이터 형식 값을 검색하는 방법과 함께 ResultSet 업데이트 메서드를 사용하여 이러한 값을 업데이트하는 방법을 보여 줍니다. </p>
    <p>이 샘플의 코드 파일 이름은 basicDT.java이며 다음과 같은 위치에 있습니다.</p>
    <p>&lt;<i>installation directory</i>&gt;\sqljdbc_&lt;<i>version</i>&gt;\&lt;<i>language</i>&gt;\help\samples\datatypes</p>
  </div><h1 class="heading">요구 사항</h1><div id="requirementsSection" class="section">
    <content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">이 샘플 응용 프로그램을 실행하려면 sqljdbc.jar 파일 또는 sqljdbc4.jar 파일을 포함하도록 클래스 경로를 설정해야 합니다. 클래스 경로에 sqljdbc.jar 또는 sqljdbc4.jar에 대한 항목이 없으면 샘플 응용 프로그램에서 일반적인 "클래스를 찾을 수 없습니다." 예외가 발생합니다. 또한 SQL Server 2005 AdventureWorks 샘플 데이터베이스에 대한 액세스 권한이 필요합니다. 클래스 경로를 설정하는 방법은 <a href="6faaf05b-8b70-4ed2-9b44-eee5897f1cd0.htm">JDBC 드라이버 사용</a>을 참조하십시오.</p>
      <p xmlns="">또한 SQL Server 2005 AdventureWorks 샘플 데이터베이스에 다음과 같은 테이블과 샘플 데이터를 만들어야 합니다.</p>
      <div class="sampleCode" xmlns=""><span codeLanguage="other"><pre>CREATE TABLE DataTypesTable 
   (Col1 int IDENTITY, 
    Col2 char,
    Col3 varchar(50), 
    Col4 bit,
    Col5 decimal(18, 2),
    Col6 money,
    Col7 datetime);

INSERT INTO DataTypesTable 
VALUES ('A', 'Some text.', 0, 15.25, 10.00, '01/01/2006 23:59:59.991');</pre></span></div>
      <div style="margin: .5em 1.5em .5em 1.5em" xmlns=""><b>참고: </b>
        Microsoft SQL Server JDBC 드라이버는 기본 설정된 JRE(Java Runtime Environment)에 따라 사용할 수 있는 sqljdbc.jar 및 sqljdbc4.jar 클래스 라이브러리 파일을 제공합니다. JAR 파일 선택에 대한 자세한 내용은 <a href="447792bb-f39b-49b4-9fd0-1ef4154c74ab.htm">JDBC 드라이버 시스템 요구 사항</a>을 참조하십시오.<p />
      </div>
    </content>
  </div><h1 class="heading">예제</h1><div id="codeExampleSection" class="section">
    <description xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <content>
        <p xmlns="">다음 예제 코드에서는 SQL Server 2005 AdventureWorks 데이터베이스에 연결한 후 DataTypesTable 테스트 테이블에서 단일 데이터 행을 검색합니다. 검색한 후 사용자 지정 <b>displayRow</b> 메서드를 호출하여 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 클래스의 다양한 <b>get&lt;Type&gt;</b> 메서드를 사용하여 ResultSet에 포함된 모든 데이터를 표시합니다.</p>
        <p xmlns="">그런 다음 예제 코드는 <b>SQLServerResultSet</b> 클래스의 다양한 <b>update&lt;Type&gt;</b> 메서드를 사용하여 ResultSet에 포함된 데이터를 업데이트한 다음 <a href="cfced0ca-a281-40dc-8d2f-370d5f0bf12b.htm">updateRow</a> 메서드를 호출하여 해당 데이터를 데이터베이스에 다시 보관합니다.</p>
        <p xmlns="">마지막으로 예제 코드는 결과 집합에 포함된 데이터를 새로 고친 후 사용자 지정 <b>displayRow</b> 메서드를 다시 호출하여 결과 집합에 포함된 데이터를 표시합니다.</p>
      </content>
    </description>
    <div class="sampleCode"><span codeLanguage="other"><pre>import java.sql.*;

public class basicDT {

   public static void main(String[] args) {

      // Create a variable for the connection string.
      String connectionUrl = "jdbc:sqlserver://localhost:1433;" +
            "databaseName=AdventureWorks;integratedSecurity=true;";

      // Declare the JDBC objects.
      Connection con = null;
      Statement stmt = null;
      ResultSet rs = null;

      try {
         // Establish the connection.
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
         con = DriverManager.getConnection(connectionUrl);

         // Create and execute an SQL statement that returns some data
         // and display it.
         String SQL = "SELECT * FROM DataTypesTable;";
         stmt = con.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE);
         rs = stmt.executeQuery(SQL);
         rs.next();
         displayRow("ORIGINAL DATA", rs);

         // Update the data in the result set.
         rs.updateString(2, "B");
         rs.updateString(3, "Some updated text.");
         rs.updateBoolean(4, true);
         rs.updateDouble(5, 77.89);
         rs.updateDouble(6, 1000.01);
         rs.updateTimestamp(7, new Timestamp(System.currentTimeMillis()));
         rs.updateRow();

         // Get the updated data from the database and display it.
         rs = stmt.executeQuery(SQL);
         rs.next();
         displayRow("UPDATED DATA", rs);
      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }

      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
   }

   private static void displayRow(String title, ResultSet rs) {
      try {
         System.out.println(title);
         System.out.println(rs.getInt(1) + " " +  // SQL integer type.
               rs.getString(2) + " " +            // SQL char type.
               rs.getString(3) + " " +            // SQL varchar type.
               rs.getBoolean(4) + " " +           // SQL bit type.
               rs.getDouble(5) + " " +            // SQL decimal type.
               rs.getDouble(6) + " " +            // SQL money type.
               rs.getTimestamp(7));               // SQL datetime type.
         System.out.println();
      } catch (Exception e) {
         e.printStackTrace();
      }
   }
}</pre></span></div>
  </div><span id="seeAlsoSpan"><h1 class="heading">참고 항목</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection"><a href="b39f44d0-3710-4bc6-880c-35bd8c10a734.htm">데이터 형식(JDBC) 사용</a><br /><br /></div><!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/><tool:tip element="roleInfoSpan" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        
		<hr />
		
		<span id="fb" class="feedbackcss">
			
			
		</span>
		
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© 2010 Microsoft Corporation. 모든 권리 보유.
		</a>
 	
	
      </div>
    </div>
  </body>
</html>